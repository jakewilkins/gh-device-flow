name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_arm:
    runs-on: ubuntu-latest
    steps:
    - name: Cache
      uses: actions/cache@v3.0.7
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-1-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('src/**.rs') }}
    - uses: actions/checkout@v3
    - name: Build ARM releases
      run: script/build-arm
    - name: Compress release assets
      run: |
          sudo chown -R runner:docker ./target
          ls -larth .
          ls -larth target
          mv ./target/arm-unknown-linux-musleabihf/release/github-device-flow .
          zip -9 gh-device-flow.arm-linux.zip ./github-device-flow
    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: gh-device-flow.arm-linux.zip
        path: gh-device-flow.arm-linux.zip
  build_armv7:
    runs-on: ubuntu-latest
    steps:
    - name: Cache
      uses: actions/cache@v3.0.7
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-1-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('src/**.rs') }}
    - uses: actions/checkout@v3
    - name: Build ARM releases
      run: script/build-armv7
    - name: Compress release assets
      run: |
          sudo chown -R runner:docker ./target
          ls -larth .
          ls -larth target
          mv ./target/armv7-unknown-linux-musleabihf/release/github-device-flow .
          zip -9 gh-device-flow.armv7-linux.zip ./github-device-flow
    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: gh-device-flow.armv7-linux.zip
        path: gh-device-flow.armv7-linux.zip
  build_macos:
    name: Build macos release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/cache@v2
        id: cache-build
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-macos-1-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('src/**.rs') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-apple-darwin
          override: true
      - name: Build release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Codesign executable
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          IDENTITY_ID: ${{ secrets.IDENTITY_ID }}
        run: |
          echo $MACOS_CERTIFICATE > certificate.p12.base64
          base64 â€”D -i certificate.p12.base64 -o certificate.p12
          rm certificate.p12.base64
          security create-keychain -p $MACOS_CERTIFICATE_PWD build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p $MACOS_CERTIFICATE_PWD build.keychain
          security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $MACOS_CERTIFICATE_PWD build.keychain
          sudo chown -R runner:docker ./target
          /usr/bin/codesign --force -s $IDENTITY_ID ./target/release/github-device-flow -v
      - name: Compress release assets
        run: |
            sudo chown -R runner:docker ./target
            mv ./target/release/github-device-flow .
            zip -9 gh-device-flow.macos.zip ./github-device-flow
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: gh-device-flow.macos.zip
          path: gh-device-flow.macos.zip
  create_release:
    runs-on: ubtuntu-latest
    needs: [build_arm, build_armv7, build_macos]
    steps:
    - name: Create release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
          tag_name: release-${{ github.sha }}
          release_name: Release ${{ github.sha }}
          body: |
            Changes in this Release - Things.
          draft: false
          prerelease: false
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v3
    - name: Upload Release Asset ARM
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gh-device-flow.arm-linux.zip
          asset_name: gh-device-flow.arm-linux.zip
          asset_content_type: application/zip
    - name: Upload Release Asset ARMv7
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gh-device-flow.armv7-linux.zip
          asset_name: gh-device-flow.armv7-linux.zip
          asset_content_type: application/zip
    - name: Upload Release Asset macos
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gh-device-flow.macos.zip
          asset_name: gh-device-flow.macos.zip
          asset_content_type: application/zip
